import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static String timeInWords(int h, int m) {
    String[] numbers = {"o' clock","one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten","eleven", "twelve", "thirteen", "fourteen", "quarter", "sixteen", "seventeen", "eighteen", "nineteen", "twenty","twenty one", "twenty two", "twenty three", "twenty four", "twenty five","twenty six", "twenty seven", "twenty eight", "twenty nine", "half"
    };
    String r=" ";
    if(m>=1&&m<=30){
        if(m==1){
            r=numbers[m]+" minute past "+numbers[h];
        }
        if(m==15){
            r=numbers[15]+" past "+numbers[h];
            return r;
        }
        if(m==30){
            r=numbers[30]+" past "+numbers[h];
            return r;
        }
        if(m!=15 && m!=30 && m!=1){
            r=numbers[m]+" minutes past "+numbers[h];
            return r;
        }
    }else if(m>30 && m<60){
        if(m==45){
            r=numbers[15]+" to "+numbers[h+1];
            return r;
        }
        if(m!=45){
            r=numbers[60-m]+" minutes to "+numbers[h+1];
            return r;
        }
    }
    return (m == 0)?numbers[h] + " " + numbers[0] : r;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int h = Integer.parseInt(bufferedReader.readLine().trim());

        int m = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.timeInWords(h, m);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
