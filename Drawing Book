import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pageCount' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER p
     */

    public static int pageCount(int n, int p) {
    // Write your code here
    List<List<Integer>> result = new ArrayList<>(); 
        
        for (int i = 0; i <= n; i++) {
            if (i % 2 == 0) {
                List<Integer> sublist = new ArrayList<>();
                sublist.add(i);
                if (i + 1 <= n) {
                    sublist.add(i + 1);
                }
                result.add(sublist);
            }
        }

        int start = -1;
        int end = -1;

        for (int i = 0; i < result.size(); i++) {
            List<Integer> sublist = result.get(i);
            if (sublist.contains(p)) {
                start = i;
                end = result.size() - 1 - i;
                break;
            }
        }

        return Math.min(start, end);
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        int p = Integer.parseInt(bufferedReader.readLine().trim());

        int result = Result.pageCount(n, p);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
