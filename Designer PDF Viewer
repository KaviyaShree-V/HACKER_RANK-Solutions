import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'designerPdfViewer' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY h
     *  2. STRING word
     */

    public static int designerPdfViewer(List<Integer> h, String word) {
    // Write your code here
    char[] letters=new char[26];
    int n= Integer.MIN_VALUE, m=0;
    char[] k= word.toCharArray();
    Map<Character,Integer> map = new HashMap<>();
    for(int i=0 ;i<26;i++){
        letters[i] = (char) (97 + i);
    }
    for(int h1=0;h1<letters.length;h1++){
        map.put(letters[h1], h.get(h1));
        // System.out.println(map.get(letters[h1]));
    }
    for(Map.Entry<Character, Integer> entry : map.entrySet()){
        for(int v=0;v<k.length;v++){
            if(entry.getKey()== k[v]){
                // m=entry.getValue();
                if(entry.getValue()>n){
                    n=entry.getValue();
                }
            }   
        }
    }
    m=n*k.length;
    return m;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        List<Integer> h = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        String word = bufferedReader.readLine();

        int result = Result.designerPdfViewer(h, word);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
